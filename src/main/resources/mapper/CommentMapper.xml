<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.elblog.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="com.example.elblog.entity.Comment">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="userIp" jdbcType="VARCHAR" property="userip"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="commentDate" jdbcType="TIMESTAMP" property="commentdate"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <association column="blogId" property="blog" javaType="com.example.elblog.entity.Blog"
                     select="com.example.elblog.mapper.BlogMapper.selectByPrimaryKey" fetchType="lazy"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , userIp, blogId, content, commentDate, state
    </sql>
    <select id="selectByExample" parameterType="com.example.elblog.entity.CommentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from t_comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_comment
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from t_comment
        order by id desc
        limit #{startRow}, #{pageSize}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from t_comment
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.example.elblog.entity.CommentExample">
        delete from t_comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <delete id="deleteByIds" parameterType="arraylist">
        delete from t_comment
        where id in
        <foreach collection="array" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>
    <insert id="insert" parameterType="com.example.elblog.entity.Comment">
        insert into t_comment (id, userIp, blogId,
                               content, commentDate, state)
        values (#{id,jdbcType=INTEGER}, #{userip,jdbcType=VARCHAR}, #{blog.id,jdbcType=INTEGER},
                #{content,jdbcType=VARCHAR}, #{commentdate,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.example.elblog.entity.Comment">
        insert into t_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userip != null">
                userIp,
            </if>
            <if test="blog!=null and blog.id != null">
                blogId,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="commentdate != null">
                commentDate,
            </if>
            <if test="state != null">
                state,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userip != null">
                #{userip,jdbcType=VARCHAR},
            </if>
            <if test="blog!=null and blog.id != null">
                #{blog.id,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="commentdate != null">
                #{commentdate,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.elblog.entity.CommentExample" resultType="java.lang.Long">
        select count(*) from t_comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_comment
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userip != null">
                userIp = #{record.userip,jdbcType=VARCHAR},
            </if>
            <if test="record.blogid != null">
                blogId = #{record.blogid,jdbcType=INTEGER},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=VARCHAR},
            </if>
            <if test="record.commentdate != null">
                commentDate = #{record.commentdate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_comment
        set id = #{record.id,jdbcType=INTEGER},
        userIp = #{record.userip,jdbcType=VARCHAR},
        blogId = #{record.blogid,jdbcType=INTEGER},
        content = #{record.content,jdbcType=VARCHAR},
        commentDate = #{record.commentdate,jdbcType=TIMESTAMP},
        state = #{record.state,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.elblog.entity.Comment">
        update t_comment
        <set>
            <if test="userip != null">
                userIp = #{userip,jdbcType=VARCHAR},
            </if>
            <if test="blog!=null and blog.id != null">
                blogId = #{blog.id,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="commentdate != null">
                commentDate = #{commentdate,jdbcType=TIMESTAMP},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.elblog.entity.Comment">
        update t_comment
        set userIp      = #{userip,jdbcType=VARCHAR},
            blogId      = #{blog.id,jdbcType=INTEGER},
            content     = #{content,jdbcType=VARCHAR},
            commentDate = #{commentdate,jdbcType=TIMESTAMP},
            state       = #{state,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByIds" parameterType="arraylist">
        update t_comment
        set state =
        <foreach collection="list" item="item" separator=" " open="case id" close="end">
           when #{item.id}  then #{item.state}
        </foreach>
        where id in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
</mapper>
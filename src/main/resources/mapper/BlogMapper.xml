<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.elblog.mapper.BlogMapper">
    <resultMap id="BaseResultMap" type="com.example.elblog.entity.Blog">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="summary" jdbcType="VARCHAR" property="summary"/>
        <result column="releaseDate" jdbcType="TIMESTAMP" property="releasedate"/>
        <result column="clickHit" jdbcType="INTEGER" property="clickhit"/>
        <result column="replyHit" jdbcType="INTEGER" property="replyhit"/>
        <result column="keyWord" jdbcType="VARCHAR" property="keyword"/>
        <association column="typeId" property="blogType"
                     select="com.example.elblog.mapper.BlogTypeMapper.selectByPrimaryKey"
                     fetchType="lazy"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.elblog.entity.Blog">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , title, summary, releaseDate, clickHit, replyHit, typeId, keyWord, content
    </sql>
    <sql id="Blob_Column_List">
        content
    </sql>

    <select id="selectByPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from t_blog
        where id&lt;=(select id from t_blog order by id desc limit #{startRow}, 1)
        order by id desc
        limit #{pageSize}
    </select>

    <select id="selectByExampleWithBLOBs" parameterType="com.example.elblog.entity.BlogExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.example.elblog.entity.BlogExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from t_blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_blog
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="sortByDate" resultType="map">
        SELECT DATE_FORMAT(releaseDate,'%Y年%m月') AS releaseDateStr ,COUNT(*) AS `count`
        FROM t_blog GROUP BY DATE_FORMAT(releaseDate,'%Y年%m月') ORDER BY DATE_FORMAT(releaseDate,'%Y年%m月') DESC;
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from t_blog
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.example.elblog.entity.BlogExample">
        delete from t_blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <delete id="deleteByIds" parameterType="arraylist">
        delete from t_blog where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <insert id="insert" parameterType="com.example.elblog.entity.Blog" useGeneratedKeys="true" keyProperty="id">
        insert into t_blog (id, title, summary,
                            releaseDate, clickHit, replyHit,
                            typeId, keyWord, content)
        values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR},
                #{releasedate,jdbcType=TIMESTAMP}, #{clickhit,jdbcType=INTEGER}, #{replyhit,jdbcType=INTEGER},
                #{blogType.id,jdbcType=INTEGER}, #{keyword,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.example.elblog.entity.Blog">
        insert into t_blog
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="summary != null">
                summary,
            </if>
            <if test="releasedate != null">
                releaseDate,
            </if>
            <if test="clickhit != null">
                clickHit,
            </if>
            <if test="replyhit != null">
                replyHit,
            </if>
            <if test="typeid != null">
                typeId,
            </if>
            <if test="keyword != null">
                keyWord,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="summary != null">
                #{summary,jdbcType=VARCHAR},
            </if>
            <if test="releasedate != null">
                #{releasedate,jdbcType=TIMESTAMP},
            </if>
            <if test="clickhit != null">
                #{clickhit,jdbcType=INTEGER},
            </if>
            <if test="replyhit != null">
                #{replyhit,jdbcType=INTEGER},
            </if>
            <if test="typeid != null">
                #{typeid,jdbcType=INTEGER},
            </if>
            <if test="keyword != null">
                #{keyword,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.example.elblog.entity.BlogExample" resultType="java.lang.Long">
        select count(*) from t_blog
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

    <select id="countByDate">
        select
    </select>
    <select id="getPrevBlog" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from t_blog
        where id&lt;#{id} order by id desc
        limit 1
    </select>
    <select id="getNextBlog" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from t_blog
        where id&gt;#{id} order by id asc
        limit 1
    </select>
    <select id="countByParam" resultType="java.lang.Long" parameterType="map">
        select count(*) from t_blog
        <where>
            <if test="typeId!=null">
                and typeId = #{typeId}
            </if>
            <if test="releaseDateStr!=null">
                and DATE_FORMAT(releaseDate,'%Y年%m月') = #{releaseDateStr}
            </if>
            <if test="title!=null and title!=''">
                and title like CONCAT('%',#{title},'%')
            </if>
            <if test="startDate!=null and startDate!=''">
                and releaseDate >= #{startDate}
            </if>
            <if test="endDate!=null and startDate!=''">
                and releaseDate &lt;= #{endDate}
            </if>
        </where>
    </select>
    <select id="selectByParam" resultMap="BaseResultMap" parameterType="map">
        select <include refid="Base_Column_List"></include>
        from t_blog
        <where>
            <if test="typeId!=null">
                and typeId = #{typeId}
            </if>
            <if test="releaseDateStr!=null">
                and DATE_FORMAT(releaseDate,'%Y年%m月') = #{releaseDateStr}
            </if>
            <if test="title!=null and title!=''">
                and title like CONCAT('%',#{title},'%')
            </if>
            <if test="startDate!=null and startDate!=''">
                and releaseDate >= #{startDate}
            </if>
            <if test="endDate!=null and startDate!=''">
                and releaseDate &lt;= #{endDate}
            </if>
        </where>
        order by id desc
        <if test="startRow!=null and pageSize!=null">
            limit #{startRow},#{pageSize}
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_blog
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.summary != null">
                summary = #{record.summary,jdbcType=VARCHAR},
            </if>
            <if test="record.releasedate != null">
                releaseDate = #{record.releasedate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.clickhit != null">
                clickHit = #{record.clickhit,jdbcType=INTEGER},
            </if>
            <if test="record.replyhit != null">
                replyHit = #{record.replyhit,jdbcType=INTEGER},
            </if>
            <if test="record.typeid != null">
                typeId = #{record.typeid,jdbcType=INTEGER},
            </if>
            <if test="record.keyword != null">
                keyWord = #{record.keyword,jdbcType=VARCHAR},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update t_blog
        set id = #{record.id,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        summary = #{record.summary,jdbcType=VARCHAR},
        releaseDate = #{record.releasedate,jdbcType=TIMESTAMP},
        clickHit = #{record.clickhit,jdbcType=INTEGER},
        replyHit = #{record.replyhit,jdbcType=INTEGER},
        typeId = #{record.typeid,jdbcType=INTEGER},
        keyWord = #{record.keyword,jdbcType=VARCHAR},
        content = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_blog
        set id = #{record.id,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        summary = #{record.summary,jdbcType=VARCHAR},
        releaseDate = #{record.releasedate,jdbcType=TIMESTAMP},
        clickHit = #{record.clickhit,jdbcType=INTEGER},
        replyHit = #{record.replyhit,jdbcType=INTEGER},
        typeId = #{record.typeid,jdbcType=INTEGER},
        keyWord = #{record.keyword,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.elblog.entity.Blog">
        update t_blog
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="summary != null">
                summary = #{summary,jdbcType=VARCHAR},
            </if>
            <if test="releasedate != null">
                releaseDate = #{releasedate,jdbcType=TIMESTAMP},
            </if>
            <if test="clickhit != null">
                clickHit = #{clickhit,jdbcType=INTEGER},
            </if>
            <if test="replyhit != null">
                replyHit = #{replyhit,jdbcType=INTEGER},
            </if>
            <if test="blogType.id != null">
                typeId = #{blogType.id,jdbcType=INTEGER},
            </if>
            <if test="keyword != null">
                keyWord = #{keyword,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.elblog.entity.Blog">
        update t_blog
        set title       = #{title,jdbcType=VARCHAR},
            summary     = #{summary,jdbcType=VARCHAR},
            releaseDate = #{releasedate,jdbcType=TIMESTAMP},
            clickHit    = #{clickhit,jdbcType=INTEGER},
            replyHit    = #{replyhit,jdbcType=INTEGER},
            typeId      = #{typeid,jdbcType=INTEGER},
            keyWord     = #{keyword,jdbcType=VARCHAR},
            content     = #{content,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.elblog.entity.Blog">
        update t_blog
        set title       = #{title,jdbcType=VARCHAR},
            summary     = #{summary,jdbcType=VARCHAR},
            releaseDate = #{releasedate,jdbcType=TIMESTAMP},
            clickHit    = #{clickhit,jdbcType=INTEGER},
            replyHit    = #{replyhit,jdbcType=INTEGER},
            typeId      = #{typeid,jdbcType=INTEGER},
            keyWord     = #{keyword,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>